From a6c2939446b42d8a61c76c8c63424a2958b61a55 Mon Sep 17 00:00:00 2001
From: Martin Jansa <Martin.Jansa@gmail.com>
Date: Thu, 18 Dec 2014 15:09:35 +0100
Subject: [PATCH 2/2] lunaprefs: remove support for mjson

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
---
 config.mk                         |   4 +-
 include/lunaprefs.h               |  24 -------
 libluna-prefs/CMakeLists.txt      |   2 +-
 libluna-prefs/Makefile            |   2 +-
 libluna-prefs/lunaprefs.c         | 131 +-------------------------------------
 luna-prefs-service/CMakeLists.txt |   2 +-
 luna-prop/CMakeLists.txt          |   2 +-
 7 files changed, 6 insertions(+), 161 deletions(-)

diff --git a/config.mk b/config.mk
index 14ed2ed..f9107e4 100644
--- a/config.mk
+++ b/config.mk
@@ -20,6 +20,4 @@ LDFLAGS := -Wl,-rpath-link,$(BUILD)/lib -Wl,-rpath,$(BUILD)/lib $(LDFLAGS) \
 		$(shell pkg-config --cflags glib-2.0) \
 		-llunaservice \
 		-L$(LUNA_STAGING)/lib \
-		$(LDFLAGS) \
-#		-lmjson \
-
+		$(LDFLAGS)
diff --git a/include/lunaprefs.h b/include/lunaprefs.h
index 41e2700..15625db 100644
--- a/include/lunaprefs.h
+++ b/include/lunaprefs.h
@@ -23,9 +23,6 @@
 #define _LUNAPREFS_H_
 
 #include <stdbool.h>
-#ifdef USE_MJSON
-#include <json.h>
-#endif
 #include <json.h>
 
 #ifdef __cplusplus
@@ -92,9 +89,6 @@ LPErr LPAppCopyValue( LPAppHandle handle, const char* key, char** jstr );
      */
 LPErr LPAppCopyValueString( LPAppHandle handle, const char* key, char** str );
 LPErr LPAppCopyValueInt( LPAppHandle handle, const char* key, int* intValue );
-#ifdef USE_MJSON
-LPErr LPAppCopyValueJ( LPAppHandle handle, const char* key, json_t** json );
-#endif
 LPErr LPAppCopyValueCJ( LPAppHandle handle, const char* key, struct json_object** json );
 
 LPErr LPAppSetValue( LPAppHandle handle, const char* key, const char* const jstr );
@@ -105,9 +99,6 @@ LPErr LPAppSetValue( LPAppHandle handle, const char* key, const char* const jstr
      */
 LPErr LPAppSetValueString( LPAppHandle handle, const char* key, const char* const str );
 LPErr LPAppSetValueInt( LPAppHandle handle, const char* key, int intValue );
-#ifdef USE_MJSON
-LPErr LPAppSetValueJ( LPAppHandle handle, const char* key, const json_t* json );
-#endif
 LPErr LPAppSetValueCJ( LPAppHandle handle, const char* key, struct json_object* json );
 
 LPErr LPAppRemoveValue( LPAppHandle handle, const char* key );
@@ -120,9 +111,6 @@ LPErr LPAppRemoveValue( LPAppHandle handle, const char* key );
  * internally.  Caller must call g_free when done.
  */
 LPErr LPAppCopyKeys( LPAppHandle handle, char** jstr );
-#ifdef USE_MJSON
-LPErr LPAppCopyKeysJ( LPAppHandle handle, json_t** json );
-#endif
 LPErr LPAppCopyKeysCJ( LPAppHandle handle, struct json_object** json );
 
 /**
@@ -133,9 +121,6 @@ LPErr LPAppCopyKeysCJ( LPAppHandle handle, struct json_object** json );
  * string returned is g_malloc'd internally.  Caller must call g_free when done.
  */
 LPErr LPAppCopyAll( LPAppHandle handle, char** jstr );
-#ifdef USE_MJSON
-LPErr LPAppCopyAllJ( LPAppHandle handle, json_t** json );
-#endif
 LPErr LPAppCopyAllCJ( LPAppHandle handle, struct json_object** json );
 
 
@@ -165,9 +150,6 @@ LPErr LPSystemCopyStringValue( const char* key, char** jstr );
  * g_free when done.
  */
 LPErr LPSystemCopyValue( const char* key, char** jstr );
-#ifdef USE_MJSON
-LPErr LPSystemCopyValueJ( const char* key, json_t** json );
-#endif
 LPErr LPSystemCopyValueCJ( const char* key, struct json_object** json );
 
 /**
@@ -179,9 +161,6 @@ LPErr LPSystemCopyValueCJ( const char* key, struct json_object** json );
  */
 
 LPErr LPSystemCopyKeys( char** jstr );
-#ifdef USE_MJSON
-LPErr LPSystemCopyKeysJ( json_t** json );
-#endif
 LPErr LPSystemCopyKeysCJ( struct json_object** json );
 
 LPErr LPSystemCopyKeysPublic( char** jstr ); /* for use by the service only */
@@ -195,9 +174,6 @@ LPErr LPSystemCopyKeysPublicCJ( struct json_object** json ); /* for use by the s
  * string returned is g_malloc'd internally.  Caller must call g_free when done.
  */
 LPErr LPSystemCopyAll( char** jstr );
-#ifdef USE_MJSON
-LPErr LPSystemCopyAllJ( json_t** json );
-#endif
 LPErr LPSystemCopyAllCJ( struct json_object** json );
 
 LPErr LPSystemCopyAllPublic( char** jstr ); /* for use by the service only */
diff --git a/libluna-prefs/CMakeLists.txt b/libluna-prefs/CMakeLists.txt
index b8711c0..6cc993c 100644
--- a/libluna-prefs/CMakeLists.txt
+++ b/libluna-prefs/CMakeLists.txt
@@ -66,7 +66,7 @@ webos_add_linker_options(ALL --no-undefined)
 add_library(luna-prefs SHARED lunaprefs.c)
 target_link_libraries(luna-prefs 
                       ${GLIB2_LDFLAGS} 
-                      ${CJSON_LDFLAGS}
+                      ${JSON_LDFLAGS}
                       ${SQLITE3_LDFLAGS}
                       ${NYXLIB_LDFLAGS}
                       )
diff --git a/libluna-prefs/Makefile b/libluna-prefs/Makefile
index 8d5fd6e..463575d 100644
--- a/libluna-prefs/Makefile
+++ b/libluna-prefs/Makefile
@@ -20,7 +20,7 @@ TOP ?= ..
 include $(TOP)/config.mk
 
 LIBS=sqlite3 glib-2.0
-# PmIpcLib  mjson
+# PmIpcLib
 
 OBJDIR=objs
 
diff --git a/libluna-prefs/lunaprefs.c b/libluna-prefs/lunaprefs.c
index 2f799d4..75d15cc 100644
--- a/libluna-prefs/lunaprefs.c
+++ b/libluna-prefs/lunaprefs.c
@@ -32,9 +32,6 @@
 #include <unistd.h>
 #include <sys/vfs.h>
 
-#ifdef USE_MJSON
-#include <json.h>
-#endif
 #include <json.h>
 #include <nyx/nyx_client.h>
 /* todo:
@@ -354,32 +351,6 @@ getValue( void* context, int nColumns, char** colValues, char** colNames )
                       SQLITE_ABORT  */
 }
 
-#ifdef USE_MJSON
-static void
-cjson_to_mjson_put( json_t** jsont, struct json_object* json )
-{
-    const char* asStr = json_object_get_string( json );
-    *jsont = json_parse_document( asStr );
-    json_object_put( json );
-}
-#endif
-
-#ifdef USE_MJSON
-static void
-mjson_to_cjson( struct json_object** json, const json_t* jsont )
-{
-    char *text = NULL;
-    enum json_error err = json_tree_to_string( (json_t*)jsont, &text );
-    if ( JSON_OK == err )
-    {
-        *json = json_tokener_parse( text );
-        g_free( text );
-    } else {
-        g_assert(0);            /* what to do? */
-    }
-}
-#endif
-
 LPErr
 LPAppCopyValue( LPAppHandle handle, const char* key, char** jstr )
 {
@@ -454,20 +425,6 @@ LPAppCopyValueInt( LPAppHandle handle, const char* key, int* intValue )
     return err;
 }
 
-#ifdef USE_MJSON
-LPErr
-LPAppCopyValueJ( LPAppHandle handle, const char* key, json_t** jsont )
-{
-    LPErr err;
-    struct json_object* json;
-    err = LPAppCopyValueCJ( handle, key, &json );
-    if ( LP_ERR_NONE == err ) {
-        cjson_to_mjson_put( jsont, json );
-    }
-    return err;
-}
-#endif
-
 LPErr
 LPAppCopyValueCJ( LPAppHandle handle, const char* key, struct json_object** json )
 {
@@ -528,20 +485,6 @@ LPAppCopyKeys( LPAppHandle handle, char** jstr )
     return err;
 } /* LPAppCopyKeys */
 
-#ifdef USE_MJSON
-LPErr
-LPAppCopyKeysJ( LPAppHandle handle, json_t** jsont )
-{
-    LPErr err;
-    struct json_object* json;
-    err = LPAppCopyKeysCJ( handle, &json );
-    if ( LP_ERR_NONE == err ) {
-        cjson_to_mjson_put( jsont, json );
-    }
-    return err;
-}
-#endif
-
 LPErr
 LPAppCopyKeysCJ( LPAppHandle handle, struct json_object** json )
 {
@@ -602,20 +545,6 @@ LPAppCopyAll( LPAppHandle handle, char** jstr )
     return err;
 }
 
-#ifdef USE_MJSON
-LPErr
-LPAppCopyAllJ( LPAppHandle handle, json_t** jsont )
-{
-    LPErr err;
-    struct json_object* json;
-    err = LPAppCopyAllCJ( handle, &json );
-    if ( LP_ERR_NONE == err ) {
-        cjson_to_mjson_put( jsont, json );
-    }
-    return err;
-}
-#endif
-
 LPErr
 LPAppCopyAllCJ( LPAppHandle handle, struct json_object** json )
 {
@@ -697,22 +626,6 @@ LPAppSetValueInt( LPAppHandle handle, const char* key, int intValue )
     return err;
 } /* LPAppSetValueInt */
 
-#ifdef USE_MJSON
-LPErr
-LPAppSetValueJ( LPAppHandle handle, const char* key, const json_t* jsont )
-{
-    g_return_val_if_fail( handle != NULL, -EINVAL );
-    g_return_val_if_fail( key != NULL, -EINVAL );
-    g_return_val_if_fail( jsont != NULL, -EINVAL );
-
-    struct json_object* json;
-    mjson_to_cjson( &json, jsont );
-    LPErr err = LPAppSetValueCJ( handle, key, json );
-    json_object_put( json );
-    return err;
-}
-#endif
-
 LPErr
 LPAppSetValueCJ( LPAppHandle handle, const char* key, struct json_object* json )
 {
@@ -731,7 +644,7 @@ LPAppSetValueCJ( LPAppHandle handle, const char* key, struct json_object* json )
         if ( !!jstr ) {
             err = setValueString( handle, key, jstr );
         } else {
-            g_critical( "json supplied to %s not acceptable to mjson", __func__ );
+            g_critical( "json supplied to %s not acceptable to json", __func__ );
             err = LP_ERR_VALUENOTJSON;
         }
     }
@@ -1245,20 +1158,6 @@ addToArrayIfUnique( const gchar* name, bool onPublicBus, void* closure )
     return err;
 } /* addToArrayIfUnique */
 
-#ifdef USE_MJSON
-LPErr
-LPSystemCopyKeysJ( json_t** jsont )
-{
-    LPErr err;
-    struct json_object* json;
-    err = LPSystemCopyKeysCJ( &json );
-    if ( LP_ERR_NONE == err ) {
-        cjson_to_mjson_put( jsont, json );
-    }
-    return err;
-}
-#endif
-
 static LPErr
 LPSystemCopyKeysCJ_impl( struct json_object** json, bool onPublicBus )
 {
@@ -1369,20 +1268,6 @@ addValToArray( const gchar* name, bool onPublicBus, void* closure )
     return err;
 }
 
-#ifdef USE_MJSON
-LPErr
-LPSystemCopyAllJ( json_t** jsont )
-{
-    LPErr err;
-    struct json_object* json;
-    err = LPSystemCopyAllCJ( &json );
-    if ( LP_ERR_NONE == err ) {
-        cjson_to_mjson_put( jsont, json );
-    }
-    return err;
-}
-#endif
-
 static LPErr
 LPSystemCopyAllCJ_impl( struct json_object** json, bool onPublicBus )
 {
@@ -1439,20 +1324,6 @@ LPSystemCopyValue( const char* key, char** jstr )
     return err;
 } /* LPSystemCopyValue */
 
-#ifdef USE_MJSON
-LPErr
-LPSystemCopyValueJ( const char* key, json_t** jsont )
-{
-    LPErr err;
-    struct json_object* json;
-    err = LPSystemCopyValueCJ( key, &json );
-    if ( LP_ERR_NONE == err ) {
-        cjson_to_mjson_put( jsont, json );
-    }
-    return err;
-}
-#endif
-
 LPErr
 LPSystemCopyValueCJ( const char* key, struct json_object** json )
 {
diff --git a/luna-prefs-service/CMakeLists.txt b/luna-prefs-service/CMakeLists.txt
index ece8f10..32a65b3 100644
--- a/luna-prefs-service/CMakeLists.txt
+++ b/luna-prefs-service/CMakeLists.txt
@@ -56,7 +56,7 @@ webos_add_linker_options(ALL --no-undefined)
 add_executable(luna-prefs-service main.c)
 target_link_libraries(luna-prefs-service
                       ${GLIB2_LDFLAGS} 
-                      ${CJSON_LDFLAGS}
+                      ${JSON_LDFLAGS}
                       ${LS2_LDFLAGS}
                       luna-prefs
                       )
diff --git a/luna-prop/CMakeLists.txt b/luna-prop/CMakeLists.txt
index 6026867..0441f8d 100644
--- a/luna-prop/CMakeLists.txt
+++ b/luna-prop/CMakeLists.txt
@@ -51,7 +51,7 @@ webos_add_linker_options(ALL --no-undefined)
 add_executable(lunaprop main.c)
 target_link_libraries(lunaprop 
                       ${GLIB2_LDFLAGS} 
-                      ${CJSON_LDFLAGS}
+                      ${JSON_LDFLAGS}
                       luna-prefs
                       )
 
-- 
2.2.0

